#ifndef NEED
#define NEED
bool comp(const string& s1, const string& s2, int ii){      // 检查s1是否为字符串s2[ii]~s2[s2.size()]的前缀
	int i, j;
	if(ii + s1.size() > s2.size()) return false;
	//cout << "sdfgwert" << endl;
	for(i = 0, j = ii; i < s1.size(); i++, j++){
		if(s1[i] != s2[j])
			return false;
	}
	return true;
}

	void split(const string& str){
		int mark;
		bool ok;
		for(mark = 0; mark < NT.size(); mark++){
			if( comp(NT[mark], str, 0) ){
				mp[NT[mark]] = spt;	
				break;
			}
		}

		for(int i = NT[mark].size(); i < str.size(); i++)
		{
			ok = false;
			for(int j = 0; !ok && j < NT.size(); j++)
			{
				if( comp(NT[j], str, i) )
				{
				//	cout << "dsfgwer" << endl;
					mp[NT[mark]].push_back(NT[j] + "`");
					ok = true;
					i += NT[j].size() - 1;
				}	
			}
	//		cout << "sdfwer" << endl;
			for(int j = 0; !ok && j < T.size(); j++)
			{
				if( comp(T[j], str, i) ){
				//	cout << "sdfee" << endl;
					mp[NT[mark]].push_back(T[j]);
					ok = true;
					i += T[j].size() - 1;
				}
			}
		}
	}

#endif

